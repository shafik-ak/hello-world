const {
  messages: { DB_CONNECTION_MISSING }
} = require('../utils/constants')
const { getSelectCQN, checkNotNull } = require('../utils/handlerUtils')
const { resolveCqnIfView } = require('../utils/defaultHandlers')

/**
 * Generic Handler for CREATE requests.
 * In case of success it returns the created entry.
 *
 * @param context - operation object, that provides error, continuation and other functions as well as information
 * regarding the current operation.
 * @alias module:handlers.onCreate
 */
const onCreate = () => async context => {
  if (!context.run) {
    context.log.warn(DB_CONNECTION_MISSING)

    return context.data
  }

  const firstKey = Object.values(context.target.keys).find(key => !(key.is2one || key.is2many))
  const checkExistCQN = getSelectCQN(context, [firstKey.name])

  const result = checkExistCQN && (await context.run(checkExistCQN))

  // If entry is available, reject event
  if (result && result.length > 0) {
    context.reject(400, 'Entity Already Exists')
    return
  }

  if (checkNotNull(context)) {
    return
  }

  await context.run(resolveCqnIfView(context))

  return context.data
}

module.exports = onCreate
