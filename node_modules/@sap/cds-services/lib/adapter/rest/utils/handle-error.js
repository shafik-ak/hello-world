const { EOL } = require('os')

const _getErrorBody = ({ message, statusCode = null, details }) => {
  const err = {
    error: {
      code: statusCode,
      message
    }
  }
  if (details) {
    err.error.details = []
    for (const error of details) {
      err.error.details.push({ code: error.code, message: error.message })
    }
  }
  return err
}

const _prepareErrorForLogging = err => {
  return `${err.statusCode ? `${err.statusCode} ` : ''}${err.message}${
    err.details ? `${EOL}Details:${err.details.map(detail => `${EOL}${detail.message}`)}` : ''
  }${err.stack ? `${EOL}${err.stack}` : ''}`
}

module.exports = (err, service, res) => {
  if (err.statusCode > 399 && err.statusCode < 500) {
    service.logger.warn(_prepareErrorForLogging(err))
  } else if (!err.statusCode || (err.statusCode > 499 && err.statusCode < 600)) {
    service.logger.error(_prepareErrorForLogging(err))

    if (process.env.NODE_ENV === 'production' && (!err.statusCode || err.statusCode === 500)) {
      err.message = 'Internal Server Error'
    }
  }

  res.status(err.statusCode || 500).send(_getErrorBody(err))
}
