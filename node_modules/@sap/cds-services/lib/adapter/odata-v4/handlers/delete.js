const {
  Components: { DATA_DELETE_HANDLER }
} = require('@sap/odata-server')
const OdataContext = require('../utils/OdataContext')
const setSapMessageHeader = require('../utils/sap-message-header')
const { validateResourcePath } = require('../utils/request')

/**
 * The handler that will be registered with odata-v4.
 * @param {Service} service
 * @param {Object} options
 * @return {Function}
 */
const del = (service, options) => {
  return (req, res, next) => {
    // End here if length is greater then allowed
    validateResourcePath(req, options, service.model)

    const context = new OdataContext(DATA_DELETE_HANDLER, service, req, res)

    service
      .processEvent(context)
      .then(() => {
        setSapMessageHeader(res, context._.infos)
        context.emit('succeeded')
        context.emit('done')
        next(null, null)
      })
      .catch(err => {
        setSapMessageHeader(res, context._.infos)
        context.emit('failed', err)
        context.emit('done')
        next(err)
      })
  }
}

module.exports = del
