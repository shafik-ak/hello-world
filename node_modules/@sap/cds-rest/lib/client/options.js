/**
 * Validates the connect and pool options and adds defaults if not given.
 * @param {Object} options - The connection options.
 * @param {String} options.kind - kind of serice (rest/odata) or package name.
 * @param {Object} [options.pool] - The pool options.
 * @param {number} [options.pool.min] - The minimum number of db connection clients.
 * @param {number} [options.pool.max] - The maximum number of db connection clients.
 * @param {number} [options.pool.evictionRunIntervalMillis] - How often to run eviction checks (in ms).
 * @param {number} [options.pool.numTestsPerEvictionRun] - Number of resources to check each eviction run.
 * @param {number} [options.pool.softIdleTimeoutMillis] - Amount of time an object may sit idle in the pool before it
 *    is eligible for eviction by the idle object evictor (if any), with the extra condition that at least “min idle”
 *    object instances remain in the pool.
 * @param {number} [options.pool.idleTimeoutMillis] - Minimum amount of time that an object may sit idle in the pool
 *    before it is eligible for eviction due to idle time. Supercedes softIdleTimeoutMillis.
 * @param {number} [options.pool.idleTimeoutMillisForPools] - Time interval in ms until an idle pool is evicted.
 */
const options = options => {
  options.pool.min = options.pool.min || 1
  options.pool.max = options.pool.max || 50

  if (options.credentials) {
    options.credentials.kind = options.kind
  }
}

module.exports = options
