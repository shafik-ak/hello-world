const cds = require('./cds')

const dependencies = {
  get BaseClient () {
    const BaseClient = require('./client/BaseClient')
    Object.defineProperty(dependencies, 'BaseClient', { value: BaseClient })
    return BaseClient
  },
  get serviceFunctions () {
    const serviceFunctions = require('./service-functions/serviceFunctions')
    Object.defineProperty(dependencies, 'serviceFunctions', { value: serviceFunctions })
    return serviceFunctions
  },
  get builder () {
    const sqlBuilder = require('./sql-builder/')
    Object.defineProperty(dependencies, 'builder', { value: sqlBuilder })
    return sqlBuilder
  },
  get expand () {
    const expand = require('./expand/expandCQNToJoin')
    expand.rawToExpanded = require('./expand/rawToExpanded')

    Object.defineProperty(dependencies, 'expand', { value: expand })
    return expand
  },
  get composition () {
    const composition = require('./composition/compositionTree')
    Object.defineProperty(dependencies, 'composition', { value: composition })
    return composition
  },
  get postProcessing () {
    const postProcessing = require('./data-conversion/post-processing')
    Object.defineProperty(dependencies, 'postProcessing', { value: postProcessing })
    return postProcessing
  },
  get onCond () {
    const onCond = require('./oncond/generateOnCond')
    Object.defineProperty(dependencies, 'onCond', { value: onCond })
    return onCond
  },
  get thenable () {
    const thenable = require('./utils/thenable')
    Object.defineProperty(dependencies, 'thenable', { value: thenable })
    return thenable
  },
  inject: (...args) => {
    return cds.inject(...args)
  }
}

module.exports = dependencies
