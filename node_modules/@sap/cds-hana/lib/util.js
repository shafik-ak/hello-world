/**
 * Converts the error code to a string if it is a number.
 *
 * @param err - that will be adapted if necessary
 * @returns {Error} - input param with adapted error code if necessary
 */
const convertErrorCodeToString = err => {
  if (typeof err.code === 'number') {
    err.code = err.code.toString()
  }

  return err
}

const convertToBoolean = boolean => {
  if (boolean === null) {
    return null
  }

  return Boolean(boolean)
}

const convertInt64ToString = int64 => {
  if (int64 === null) {
    return null
  }

  return String(int64)
}

const convertToISO = element => {
  if (element) {
    return new Date(element + 'Z').toISOString()
  }

  return null
}

const convertToISONoMillis = element => {
  if (element) {
    const dateTime = new Date(element + 'Z').toISOString()
    return dateTime.slice(0, 19) + dateTime.slice(23)
  }

  return null
}

const convertToString = element => {
  if (element) {
    return element instanceof Buffer ? Buffer.from(element, 'base64').toString() : element
  }

  return null
}

module.exports = {
  convertToBoolean,
  convertInt64ToString,
  convertToISO,
  convertToISONoMillis,
  convertErrorCodeToString,
  convertToString
}
