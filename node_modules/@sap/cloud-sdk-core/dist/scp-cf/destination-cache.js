"use strict";
/*!
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("../util");
var cache_1 = require("./cache");
var destination_accessor_1 = require("./destination-accessor");
var DestinationCache = function (cache) { return ({
    retrieveDestinationFromCache: function (decodedProviderJwt, name, isolation) {
        return cache.get(getDestinationCacheKey(decodedProviderJwt, name, isolation));
    },
    cacheRetrievedDestinations: function (decoded, retrievedDestinations, isolation) {
        __spreadArrays(retrievedDestinations.instance, retrievedDestinations.subaccount).forEach(function (destination) {
            var key = getDestinationCacheKey(decoded, destination.name, isolation);
            cache.set(key, destination);
        });
    },
    clear: function () {
        cache.clear();
    }
}); };
function getDestinationCacheKey(decoded, destinationName, isolationStrategy) {
    switch (isolationStrategy) {
        case destination_accessor_1.IsolationStrategy.No_Isolation:
            return "::" + destinationName;
        case destination_accessor_1.IsolationStrategy.Tenant_User:
            return util_1.tenantId(decoded) + ":" + util_1.userId(decoded) + ":" + destinationName;
        case destination_accessor_1.IsolationStrategy.User:
            return ":" + util_1.userId(decoded) + ":" + destinationName;
        default:
            return util_1.tenantId(decoded) + "::" + destinationName;
    }
}
exports.destinationCache = DestinationCache(new cache_1.Cache({ hours: 0, minutes: 5, seconds: 0 }));
//# sourceMappingURL=destination-cache.js.map