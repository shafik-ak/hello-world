const { getFeatureNotSupportedError } = require('../../../util/errors')

/**
 * Transform odata DELETE request into a CQN object.
 *
 * @param context - Contains request information and utility methods like statements.
 * @param req - An odata request.
 * @throws Error - If invalid path segment provided
 * @private
 */
const deleteToCQN = ({ statements: { DELETE, UPDATE }, target }, req) => {
  const segments = req.getUriInfo().getPathSegments()
  const segment = segments[segments.length - 1]
  const SUPPORTED_KINDS = ['NAVIGATION.TO.ONE', 'ENTITY']

  if (SUPPORTED_KINDS.includes(segment.getKind())) {
    return segment.getKeyPredicates().reduce((Delete, element) => {
      return Delete.where(element.getEdmRef().getName(), element.getText())
    }, DELETE.from(target))
  } else if (segment.getKind() === 'PRIMITIVE.PROPERTY') {
    return segments[segments.length - 2].getKeyPredicates().reduce((Update, element) => {
      return Update.where(element.getEdmRef().getName(), element.getText())
    }, UPDATE(target).set({ [segment.getProperty().getName()]: null }))
  } else {
    throw getFeatureNotSupportedError(`DELETE of kind "${segment.getKind()}"`)
  }
}

module.exports = deleteToCQN
