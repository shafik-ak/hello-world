const getColumns = require('../../services/utils/columns')

/**
 * This method finds all annotated columns of the entity.
 * If it is annotated with user, the logged in user is set as value.
 * For all other cases we assume it is annotated as now and the current timestamp is set as value.
 *
 * @param modification - insert or update
 * @param target
 * @param user
 * @returns {Array}
 * @private
 */
module.exports = (modification, target, user, date) => {
  const cdsAnnotation = `@cds.on.${modification}`
  const odataAnnotation = `@odata.on.${modification}`
  const columns = getColumns(target).filter(column => column[cdsAnnotation] || column[odataAnnotation])

  for (const column of columns) {
    if (column[cdsAnnotation]) {
      column.value = column[cdsAnnotation]['='] === '$user' ? user.id : date.toISOString()
    } else {
      column.value = column[odataAnnotation]['#'] === 'user' ? user.id : date.toISOString()
    }
  }

  return columns
}
