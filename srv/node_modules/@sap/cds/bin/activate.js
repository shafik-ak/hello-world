const path = require('path');

module.exports = Object.assign(activate, {
    options: ['--username', '--passcode', '--subdomain', '--to' ],
    flags: ['--undeploy', '--wsdl'],
    shortcuts: ['-u', '-p', '-s'],
    help: `
# SYNOPSIS

    *cds activate* [ <project> ] [ --to <url> ]

   Activate an extension project


# OPTIONS

    *-p* | *--passcode* <passcode>
    
        The passcode for authentication

    *-u* | *--username* <name> 

        Deprecated. Use passcode parameter instead.
        
    *--to* <url>
        The url to activate.
        
    *--undeploy* 
        Undeploy a previously deployed extension.
        
    *--wsdl*
        Upload files from wsdl folder           

`})


async function activate ([folder], options = {}) {
    try {
        if (folder) {
            process.chdir(path.resolve(process.cwd(), folder))
        }

        const client = require('@sap/cds-sidecar-client')
        const askQuestion = client.question.askQuestion

        if (options.username && !options.passcode) {
            options.password = await askQuestion('Password: ', undefined, true)
        }

        const cds = require('../lib/cds')
        const compile = require('../lib/models/cdsv').compile
        const collectSources = require('../lib/models/cdsv').collectSources

        const injection = {
            collectSources,
            compile,
            cds
        };

        try {
            await client.apply(injection, null, options)
        } catch (e) {
            console.error('\n[ERROR] Failed to activate extension\n\n' + e.message)
        }

    } catch (e) {
        console.log('This feature requires cds-sidecar-client to be installed')
    }

}



/* eslint no-console: off */
